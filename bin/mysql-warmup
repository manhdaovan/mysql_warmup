#!/usr/bin/env ruby
# encoding: utf-8

$LOAD_PATH.unshift(File.expand_path('../lib', File.dirname(__FILE__)))
require 'mysql_warmup'
require 'optparse'

def print_help
  puts "mysql-warmup, by ManhDV - version #{MysqlWarmup::VERSION}"
  puts 'Website: https://github.com/manhdaovan/mysql_warmup'
  puts
  puts 'Usage: mysql-warmup -u username <options>'
  puts
  puts 'Input options:'
  puts '-h host      : Host or ip of mysql instance. Default is localhost'
  puts '-u username  : Username to access mysql instance'
  puts '-d database  : Database to warmup.'
  puts '               Default to all databases exclude information_schema, mysql, performance_schema, sys'
  puts '-p port      : Port to connect. Default to 3306'
  puts '--help       : Show help message'
  puts '--version    : Show mysql-warmup version'
end

def print_error(msg)
  puts
  puts ">>> ERROR: #{msg}"
end

def params_valid?(options)
  required_params = [:host, :username]
  valid           = true
  required_params.each do |rp|
    next unless options.fetch(rp, nil).nil?
    print_error("Required #{rp}")
    valid = false
  end
  valid
end

options = {show_version: false, help: false, port: 3306, database: 'all', host: 'localhost'}

begin
  OptionParser.new do |opts|
    opts.banner = 'Usage: mysql-warmup -h host-or-ip -u username <options>'
    opts.on('-h host', String) do |h|
      options[:host] = h
    end

    opts.on('-u username') do |u|
      options[:username] = u
    end

    opts.on('-d database') do |d|
      options[:database] = d
    end

    opts.on('-p port') do |p|
      options[:port] = p
    end

    opts.on('--help') do |_|
      options[:help] = true
    end

    opts.on('--version') do |_|
      options[:show_version] = true
    end
  end.parse!
rescue OptionParser::InvalidArgument, OptionParser::InvalidOption => e
  print_error(e.message)
  print_help
  exit(0)
end

# Execute command base on input
if options[:show_version]
  puts MysqlWarmup::VERSION
elsif options[:help]
  print_help
elsif params_valid?(options)
  puts
  puts 'Input the mysql password:'
  password = gets.chomp
  begin
    MysqlWarmup::Warmer.new(options[:host],
                            options[:username],
                            password,
                            options[:port].to_i,
                            options[:database]).warmup
  rescue => e
    print_error(e.message)
  end
else
  print_help
end
